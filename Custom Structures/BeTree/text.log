INFO::Add new root value(13)

INFO::Start adding value(15)
DEBUG::__add([13, (L(13):None, (R(13):None], 15, None)
INFO::Added new value(15) Right
DEBUG::End __add([13, (L(13):None, (R(13):[15, (L(15):None, (R(15):None]], 15)
INFO::Start checking node ([13, (L(13):None, (R(13):[15, (L(15):None, (R(15):None]])
WARNING::_check([13, (L(13):None, (R(13):[15, (L(15):None, (R(15):None]])
WARNING::Left(0) Right(1) Diff(1) Direct(None)
WARNING::End _check([13, (L(13):None, (R(13):[15, (L(15):None, (R(15):None]])
INFO::End adding value(15)

INFO::Start adding value(10)
DEBUG::__add([13, (L(13):None, (R(13):[15, (L(15):None, (R(15):None]], 10, None)
INFO::Added new value(10) Left
DEBUG::End __add([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):None]], 10)
INFO::Start checking node ([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):None]])
WARNING::_check([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):None]])
WARNING::Left(1) Right(1) Diff(0) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):None]])
INFO::End adding value(10)

INFO::Start adding value(16)
DEBUG::__add([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):None]], 16, None)
DEBUG::Right Call
DEBUG::__add([15, (L(15):None, (R(15):None], 16, R)
INFO::Added new value(16) Right
DEBUG::End __add([15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]], 16)
INFO::Start checking node ([15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
WARNING::_check([15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
WARNING::Left(0) Right(1) Diff(1) Direct(R)
WARNING::End _check([15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
DEBUG::End __add([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 16)
INFO::Start checking node ([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(1) Right(2) Diff(1) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(16)

INFO::Start adding value(11)
DEBUG::__add([13, (L(13):[10, (L(10):None, (R(10):None], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 11, None)
DEBUG::Left Call
DEBUG::__add([10, (L(10):None, (R(10):None], 11, L)
INFO::Added new value(11) Right
DEBUG::End __add([10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], 11)
INFO::Start checking node ([10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(0) Right(1) Diff(1) Direct(L)
WARNING::End _check([10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]])
DEBUG::End __add([13, (L(13):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 11)
INFO::Start checking node ([13, (L(13):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(2) Right(2) Diff(0) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(11)

INFO::Start adding value(5)
DEBUG::__add([13, (L(13):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 5, None)
DEBUG::Left Call
DEBUG::__add([10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], 5, L)
INFO::Added new value(5) Left
DEBUG::End __add([10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], 5)
INFO::Start checking node ([10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(1) Right(1) Diff(0) Direct(L)
WARNING::End _check([10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
DEBUG::End __add([13, (L(13):[10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 5)
INFO::Start checking node ([13, (L(13):[10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(2) Right(2) Diff(0) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(5)

INFO::Start adding value(4)
DEBUG::__add([13, (L(13):[10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 4, None)
DEBUG::Left Call
DEBUG::__add([10, (L(10):[5, (L(5):None, (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], 4, L)
DEBUG::Left Call
DEBUG::__add([5, (L(5):None, (R(5):None], 4, L)
INFO::Added new value(4) Left
DEBUG::End __add([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], 4)
INFO::Start checking node ([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None])
WARNING::_check([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None])
WARNING::Left(1) Right(0) Diff(-1) Direct(L)
WARNING::End _check([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None])
DEBUG::End __add([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], 4)
INFO::Start checking node ([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(2) Right(1) Diff(-1) Direct(L)
WARNING::End _check([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]])
DEBUG::End __add([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 4)
INFO::Start checking node ([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(3) Right(2) Diff(-1) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(4)

INFO::Start adding value(6)
DEBUG::__add([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 6, None)
DEBUG::Left Call
DEBUG::__add([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(10):[11, (L(11):None, (R(11):None]], 6, L)
DEBUG::Left Call
DEBUG::__add([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], 6, L)
INFO::Added new value(6) Right
DEBUG::End __add([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], 6)
INFO::Start checking node ([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]])
WARNING::_check([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]])
WARNING::Left(1) Right(1) Diff(0) Direct(L)
WARNING::End _check([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]])
DEBUG::End __add([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], 6)
INFO::Start checking node ([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(2) Right(1) Diff(-1) Direct(L)
WARNING::End _check([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]])
DEBUG::End __add([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 6)
INFO::Start checking node ([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(3) Right(2) Diff(-1) Direct(None)
WARNING::End _check([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(6)

INFO::Start adding value(7)
DEBUG::__add([13, (L(13):[10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 7, None)
DEBUG::Left Call
DEBUG::__add([10, (L(10):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], (R(10):[11, (L(11):None, (R(11):None]], 7, L)
DEBUG::Left Call
DEBUG::__add([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):None]], 7, L)
DEBUG::Right Call
DEBUG::__add([6, (L(6):None, (R(6):None], 7, L)
INFO::Added new value(7) Right
DEBUG::End __add([6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]], 7)
INFO::Start checking node ([6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]])
WARNING::_check([6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]])
WARNING::Left(0) Right(1) Diff(1) Direct(L)
WARNING::End _check([6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]])
DEBUG::End __add([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]]], 7)
INFO::Start checking node ([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]]])
WARNING::_check([5, (L(5):[4, (L(4):None, (R(4):None], (R(5):[6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]]])
WARNING::Left(1) Right(2) Diff(1) Direct(L)
INFO::Left Node
CRITICAL::__add_node_left(NODE:[6, (L(6):None, (R(6):[7, (L(7):None, (R(7):None]], TMP:[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None])
CRITICAL::Added Left Node ([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]])
INFO::Send to _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]])
WARNING::_check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]])
WARNING::Left(2) Right(1) Diff(-1) Direct(None)
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]])
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]])
DEBUG::End __add([10, (L(10):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]], (R(10):[11, (L(11):None, (R(11):None]], 7)
INFO::Start checking node ([10, (L(10):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(3) Right(1) Diff(-2) Direct(L)
INFO::Right Node
CRITICAL::__add_node_right(NODE:[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[7, (L(7):None, (R(7):None]], TMP:[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]])
CRITICAL::__add_node_right(NODE:[7, (L(7):None, (R(7):None], TMP:[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]])
CRITICAL::Added Right Node ([7, (L(7):None, (R(7):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]]])
INFO::Send to _check([7, (L(7):None, (R(7):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]]])
WARNING::_check([7, (L(7):None, (R(7):[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]]])
WARNING::Left(0) Right(2) Diff(2) Direct(None)
INFO::Left Node
CRITICAL::__add_node_left(NODE:[10, (L(10):None, (R(10):[11, (L(11):None, (R(11):None]], TMP:[7, (L(7):None, (R(7):None])
CRITICAL::Added Left Node ([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]])
INFO::Send to _check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::_check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::Left(1) Right(1) Diff(0) Direct(None)
WARNING::End _check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]])
WARNING::End _check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]])
CRITICAL::Added Right Node ([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]])
INFO::Send to _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]])
WARNING::_check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]])
WARNING::Left(2) Right(2) Diff(0) Direct(None)
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]])
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]])
DEBUG::End __add([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]], 7)
INFO::Start checking node ([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::_check([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
WARNING::Left(3) Right(2) Diff(-1) Direct(None)
WARNING::End _check([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::End adding value(7)

ERROR::Start remove(15, [13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
ERROR::__remove(15, [13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]]])
INFO::Right Node
ERROR::__remove(15, [15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
ERROR::__remove(15, [15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
ERROR::Node found ([15, (L(15):None, (R(15):[16, (L(16):None, (R(16):None]])
ERROR::Send to Check([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[16, (L(16):None, (R(16):None]])
WARNING::_check([13, (L(13):[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], (R(13):[16, (L(16):None, (R(16):None]])
WARNING::Left(3) Right(1) Diff(-2) Direct(None)
INFO::Right Node
CRITICAL::__add_node_right(NODE:[6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]]], TMP:[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]])
CRITICAL::__add_node_right(NODE:[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[11, (L(11):None, (R(11):None]], TMP:[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]])
CRITICAL::__add_node_right(NODE:[11, (L(11):None, (R(11):None], TMP:[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]])
CRITICAL::Added Right Node ([11, (L(11):None, (R(11):[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]]])
INFO::Send to _check([11, (L(11):None, (R(11):[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]]])
WARNING::_check([11, (L(11):None, (R(11):[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]]])
WARNING::Left(0) Right(2) Diff(2) Direct(None)
INFO::Left Node
CRITICAL::__add_node_left(NODE:[13, (L(13):None, (R(13):[16, (L(16):None, (R(16):None]], TMP:[11, (L(11):None, (R(11):None])
CRITICAL::Added Left Node ([13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]])
INFO::Send to _check([13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]])
WARNING::_check([13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]])
WARNING::Left(1) Right(1) Diff(0) Direct(None)
WARNING::End _check([13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]])
WARNING::End _check([13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]])
CRITICAL::Added Right Node ([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]])
INFO::Send to _check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]])
WARNING::_check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]])
WARNING::Left(1) Right(2) Diff(1) Direct(None)
WARNING::End _check([10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]])
CRITICAL::Added Right Node ([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
INFO::Send to _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
WARNING::_check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
WARNING::Left(2) Right(3) Diff(1) Direct(None)
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
WARNING::End _check([6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
ERROR::End removing(15, [6, (L(6):[5, (L(5):[4, (L(4):None, (R(4):None], (R(5):None], (R(6):[10, (L(10):[7, (L(7):None, (R(7):None], (R(10):[13, (L(13):[11, (L(11):None, (R(11):None], (R(13):[16, (L(16):None, (R(16):None]]]])
